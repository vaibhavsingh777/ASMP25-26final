.wishlist-background-image {
    background-image: url("../../assets/asmp_bg.jpg");
    background-size: cover;
    background-position: center;
    background-attachment: fixed;
    width: 100vw;
    height: 400vh;
    z-index: -1;
    /* position: relative; */
}

.wishlist-background-image::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.4);
    /* Adjust the rgba value for desired darkness */
    z-index: 1;
    pointer-events: none;
}

.wishlist-background-image>* {
    position: relative;
    z-index: 100;
}

.wishlist-headings-1 {
    text-align: center;
    padding: 2%;
    padding-bottom: 0%;
    margin-bottom: 3rem;
    font-size: 4rem;
    color: white;
    font-family: "Fraunces, serif";
    font-weight: 700;
    background: rgba(95, 22, 101, 0.5);
    box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37);
    backdrop-filter: blur(9px);
    -webkit-backdrop-filter: blur(9px);
    border: 1px solid rgba(255, 255, 255, 0.18);
}

.wishlist-headings-2 {
    padding: 1rem;
    text-align: center;
    font-size: 4rem;
    color: white;
    font-family: "Fraunces, serif";
    font-weight: 700;
}

/* .wishlist-mentor-cards {
    display: grid;
    column-gap: 4rem;
    row-gap: 1rem;
    flex-direction: row;
    grid-template-columns: auto auto auto;
    flex-wrap: wrap;
    justify-content: center;
    margin: 2rem;
} */

.wishlist-mentor-cards-ka-div {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    align-items: center;
}

.wishlist-mentor-cards>div {
    flex: 1 0 21%;
    margin: 1rem auto;
    box-sizing: border-box;
    /* Ensure padding and border are included in the width/height */
}

@media (max-width: 1100px) {
    .wishlist-mentor-cards>div {
        flex: 1 0 30%;
        margin: 0.5rem auto;
    }
}

@media (max-width: 730px) {
    .wishlist-mentor-cards>div {
        flex: 1 0 100%;
        margin: 0.5rem auto;
    }
}

.input {
    display: flex;
    justify-content: center;
    align-items: center;
    --background: rgba(255, 255, 255, 0.3);
    --border-default: #D0D0DF;
    --border-active: rgba(48, 82, 52, 0.5);
    --shadow-default: rgba(32, 32, 72, 0.12);
    --shadow-active: rgba(61, 109, 249, 0.25);
    --text-color: #818190;
    --placeholder-color: #C9C9D9;
    --placeholder-color-hover: #BABAC9;
    --close: #818190;
    --close-light: #BABAC9;
    --close-background: #F1F1FA;
    width: 100%;
    display: flex;
    align-items: center;
    border-radius: 17px;
    background: var(--background);
    box-shadow: inset 0 0 0 var(--border-width, 1px) var(--border, var(--border-default)), 0 1px 3px var(--shadow, var(--shadow-default));
    transition: box-shadow 0.2s;
    --clear-x: 0px;
    --clear-swipe-left: 0px;
    --clear-swipe-x: 0;
    --clear-swipe: 0px;
    --clear-scale: 0;
    --clear-rotate: 0deg;
    --clear-opacity: 0;
    --clear-arrow-o: 1;
    --clear-arrow-x: 0px;
    --clear-arrow-y: 0px;
    --clear-arrow-offset: 4px;
    --clear-arrow-offset-second: 4px;
    --clear-line-array: 8.5px;
    --clear-line-offset: 27px;
    --clear-long-array: 8.5px;
    --clear-long-offset: 24px;
}

.input.clearing,
.input:focus-within {
    --border-width: 5px;
    --border: var(--border-active);
    --shadow: var(--shadow-active);
}

.input.clearing {
    --close-background: transparent;
    --clear-arrow-stroke: var(--close-light);
}

.input .text {
    flex-grow: 1;
}

.input .text input {
    -webkit-appearance: none;
    appearance: none;
    line-height: 24px;
    background: none;
    border: none;
    outline: none;
    display: block;
    width: 100%;
    margin: 0%;
    padding: 12px 16px;
    font-family: inherit;
    font-size: 18px;
    font-weight: 500;
    color: #ffffff;
}

.input .text input::placeholder {
    color: var(--placeholder-color);
    transition: color 0.2s;
}

.input:hover .text input::placeholder {
    color: var(--placeholder-color-hover);
}

.input .clear {
    -webkit-appearance: none;
    appearance: none;
    position: relative;
    outline: none;
    z-index: 1;
    padding: 0;
    margin: 12px 12px 12px 0;
    border: none;
    background: var(--b, transparent);
    transition: background 0.2s;
    border-radius: 50%;
    opacity: var(--clear-opacity);
    transform: scale(var(--clear-scale)) translateZ(0);
}

.input .clear:before {
    content: '';
    position: absolute;
    top: 0;
    bottom: 0;
    right: 12px;
    left: var(--clear-swipe-left);
    background: var(--background);
    transform-origin: 100% 50%;
    transform: translateX(var(--clear-swipe)) scaleX(var(--clear-swipe-x)) translateZ(0);
}

.input .clear svg {
    display: block;
    position: relative;
    z-index: 1;
    width: 24px;
    height: 24px;
    outline: none;
    cursor: pointer;
    fill: none;
    stroke-width: 1.5;
    stroke-linecap: round;
    stroke-linejoin: round;
    stroke: var(--close);
    transform: translateX(var(--clear-x)) rotate(var(--clear-rotate)) translateZ(0);
}

.input .clear path {
    transition: stroke 0.2s;
}

.input .clear path.arrow {
    stroke: var(--clear-arrow-stroke, var(--close));
    stroke-dasharray: 4px;
    stroke-dashoffset: var(--clear-arrow-offset);
    opacity: var(--clear-arrow-o);
    transform: translate(var(--clear-arrow-x), var(--clear-arrow-y)) translateZ(0);
}

.input .clear path.arrow:last-child {
    stroke-dashoffset: var(--clear-arrow-offset-second);
}

.input .clear path.line {
    stroke-dasharray: var(--clear-line-array) 28.5px;
    stroke-dashoffset: var(--clear-line-offset);
}

.input .clear path.long {
    stroke: var(--clear-arrow-stroke, var(--close));
    stroke-dasharray: var(--clear-long-array) 15.5px;
    stroke-dashoffset: var(--clear-long-offset);
    opacity: var(--clear-arrow-o);
    transform: translate(var(--clear-arrow-x), var(--clear-arrow-y)) translateZ(0);
}

.input .clear:hover {
    --b: var(--close-background);
}